/**
 * Copyright (C) 1998-2009 TENCENT Inc.All Rights Reserved.		
 * 																	
 * FileName??ObjectFactory.class				
 *			
 * Description??????????????????ù?????????Щ??????????????????????5??????Spring				 
 * History??
 *  ?汾??    ????      ????       ?????????????
 *  1.0   raywu  2010-11-09  Create	
 */
package com.paipai.verticalframework.core;

/**
 * ????????????????ù?????????Щ??????????????????????5??????Spring
 * 
 * @author raywu????????????
 * @version 1.0???°汾???
 * @see ?ο???JavaDoc
 */
public abstract class ObjectFactory {

	/**
	 * ????????е????
	 * 
	 * @param type???????????
	 * @param name??????????
	 * @return <T>
	 * @exception ObjectConfigException???????????????
	 * @see ?ο???JavaDoc
	 */
	public abstract <T> T getConfigObject(Class<T> type, String name);

	/**
	 * ??ù????е???????bean???????5
	 * 
	 * @param bean??????????5?????
	 * @see ?ο???JavaDoc
	 */
	public abstract void bindConfigDependence(Object bean);

	/**
	 * ???????????????????
	 * 
	 * @param beanName?????????
	 * @return boolean
	 * @see ?ο???JavaDoc
	 */
	public abstract boolean containsConfigBean(String beanName);

	private static ObjectFactory INSTANCE = null;

	public static void setInstance(ObjectFactory obj) {
		INSTANCE = obj;
	}

	public static ObjectFactory getInstance() {
		return INSTANCE;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.paipai.verticalframework.core.ObjectFactory#getConfigObject(java.lang.Class,java.lang.Object)
	 */
	public static <T> T getObject(Class<T> type, String name) {
		if (INSTANCE == null) {
			throw new ObjectConfigException("ObjectFactory INSTANCE is null");
		}

		try {
			Object obj = INSTANCE.getConfigObject(type, name);

			return (T) obj;
		}
		catch (RuntimeException e) {
			throw new ObjectConfigException("Get Object[" + name + "] Failed",
					e);
		}

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.paipai.verticalframework.core.ObjectFactory#containsConfigBean(java.lang.Object)
	 */
	public static boolean containsBean(String beanName) {
		return INSTANCE.containsConfigBean(beanName);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.paipai.verticalframework.core.ObjectFactory#bindConfigDependence(java.lang.Object)
	 */
	public static void bindDependence(Object bean) {
		INSTANCE.bindConfigDependence(bean);
	}
}
